<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook original-version='18.1' source-build='2021.3.3 (20213.21.1018.0949)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='transactions+' inline='true' name='federated.1psp1s30gcrerd1bct4nh1mdo54m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='transactions' name='textscan.1p01qc21gze0bn1a8fuma1mi413r'>
            <connection class='textscan' directory='C:/Users/Toss/OneDrive/Documents/School/479/Assignment 2 Data' filename='transactions.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[transactions.csv].[store]' />
                <expression op='[causal_lookup.csv].[store]' />
              </expression>
              <expression op='='>
                <expression op='[transactions.csv].[week]' />
                <expression op='[causal_lookup.csv].[week]' />
              </expression>
              <expression op='='>
                <expression op='[transactions.csv].[upc]' />
                <expression op='[causal_lookup.csv].[upc]' />
              </expression>
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[transactions.csv].[upc]' />
                <expression op='[product_lookup.csv].[upc]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[store_lookup.csv].[store_zip_code]' />
                  <expression op='[uszips.csv].[zip]' />
                </expression>
              </clause>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[transactions.csv].[store]' />
                    <expression op='[store_lookup.csv].[store]' />
                  </expression>
                </clause>
                <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='transactions.csv' table='[transactions#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='upc' ordinal='0' />
                    <column datatype='real' name='dollar_sales' ordinal='1' />
                    <column datatype='integer' name='units' ordinal='2' />
                    <column datatype='integer' name='time_of_transaction' ordinal='3' />
                    <column datatype='integer' name='geography' ordinal='4' />
                    <column datatype='integer' name='week' ordinal='5' />
                    <column datatype='integer' name='household' ordinal='6' />
                    <column datatype='integer' name='store' ordinal='7' />
                    <column datatype='integer' name='basket' ordinal='8' />
                    <column datatype='integer' name='day' ordinal='9' />
                    <column datatype='integer' name='coupon' ordinal='10' />
                  </columns>
                </relation>
                <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='store_lookup.csv' table='[store_lookup#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='store' ordinal='0' />
                    <column datatype='integer' name='store_zip_code' ordinal='1' />
                  </columns>
                </relation>
              </relation>
              <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='uszips.csv' table='[uszips#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='zip' ordinal='0' />
                  <column datatype='string' name='city' ordinal='1' />
                  <column datatype='string' name='state_id' ordinal='2' />
                  <column datatype='string' name='state_name' ordinal='3' />
                  <column datatype='integer' name='population' ordinal='4' />
                  <column datatype='real' name='density' ordinal='5' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='product_lookup.csv' table='[product_lookup#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='upc' ordinal='0' />
                <column datatype='string' name='product_description' ordinal='1' />
                <column datatype='string' name='commodity' ordinal='2' />
                <column datatype='string' name='brand' ordinal='3' />
                <column datatype='string' name='product_size' ordinal='4' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='causal_lookup.csv' table='[causal_lookup#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='upc' ordinal='0' />
              <column datatype='integer' name='store' ordinal='1' />
              <column datatype='integer' name='week' ordinal='2' />
              <column datatype='string' name='feature_desc' ordinal='3' />
              <column datatype='string' name='display_desc' ordinal='4' />
              <column datatype='integer' name='geography' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[transactions.csv].[store]' />
                <expression op='[causal_lookup.csv].[store]' />
              </expression>
              <expression op='='>
                <expression op='[transactions.csv].[week]' />
                <expression op='[causal_lookup.csv].[week]' />
              </expression>
              <expression op='='>
                <expression op='[transactions.csv].[upc]' />
                <expression op='[causal_lookup.csv].[upc]' />
              </expression>
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[transactions.csv].[upc]' />
                <expression op='[product_lookup.csv].[upc]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[store_lookup.csv].[store_zip_code]' />
                  <expression op='[uszips.csv].[zip]' />
                </expression>
              </clause>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[transactions.csv].[store]' />
                    <expression op='[store_lookup.csv].[store]' />
                  </expression>
                </clause>
                <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='transactions.csv' table='[transactions#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='upc' ordinal='0' />
                    <column datatype='real' name='dollar_sales' ordinal='1' />
                    <column datatype='integer' name='units' ordinal='2' />
                    <column datatype='integer' name='time_of_transaction' ordinal='3' />
                    <column datatype='integer' name='geography' ordinal='4' />
                    <column datatype='integer' name='week' ordinal='5' />
                    <column datatype='integer' name='household' ordinal='6' />
                    <column datatype='integer' name='store' ordinal='7' />
                    <column datatype='integer' name='basket' ordinal='8' />
                    <column datatype='integer' name='day' ordinal='9' />
                    <column datatype='integer' name='coupon' ordinal='10' />
                  </columns>
                </relation>
                <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='store_lookup.csv' table='[store_lookup#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='store' ordinal='0' />
                    <column datatype='integer' name='store_zip_code' ordinal='1' />
                  </columns>
                </relation>
              </relation>
              <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='uszips.csv' table='[uszips#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='zip' ordinal='0' />
                  <column datatype='string' name='city' ordinal='1' />
                  <column datatype='string' name='state_id' ordinal='2' />
                  <column datatype='string' name='state_name' ordinal='3' />
                  <column datatype='integer' name='population' ordinal='4' />
                  <column datatype='real' name='density' ordinal='5' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='product_lookup.csv' table='[product_lookup#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='upc' ordinal='0' />
                <column datatype='string' name='product_description' ordinal='1' />
                <column datatype='string' name='commodity' ordinal='2' />
                <column datatype='string' name='brand' ordinal='3' />
                <column datatype='string' name='product_size' ordinal='4' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='causal_lookup.csv' table='[causal_lookup#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='upc' ordinal='0' />
              <column datatype='integer' name='store' ordinal='1' />
              <column datatype='integer' name='week' ordinal='2' />
              <column datatype='string' name='feature_desc' ordinal='3' />
              <column datatype='string' name='display_desc' ordinal='4' />
              <column datatype='integer' name='geography' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[basket]' value='[transactions.csv].[basket]' />
          <map key='[brand]' value='[product_lookup.csv].[brand]' />
          <map key='[city]' value='[uszips.csv].[city]' />
          <map key='[commodity]' value='[product_lookup.csv].[commodity]' />
          <map key='[coupon]' value='[transactions.csv].[coupon]' />
          <map key='[day]' value='[transactions.csv].[day]' />
          <map key='[density]' value='[uszips.csv].[density]' />
          <map key='[display_desc]' value='[causal_lookup.csv].[display_desc]' />
          <map key='[dollar_sales]' value='[transactions.csv].[dollar_sales]' />
          <map key='[feature_desc]' value='[causal_lookup.csv].[feature_desc]' />
          <map key='[geography (causal_lookup.csv)]' value='[causal_lookup.csv].[geography]' />
          <map key='[geography]' value='[transactions.csv].[geography]' />
          <map key='[household]' value='[transactions.csv].[household]' />
          <map key='[population]' value='[uszips.csv].[population]' />
          <map key='[product_description]' value='[product_lookup.csv].[product_description]' />
          <map key='[product_size]' value='[product_lookup.csv].[product_size]' />
          <map key='[state_id]' value='[uszips.csv].[state_id]' />
          <map key='[state_name]' value='[uszips.csv].[state_name]' />
          <map key='[store (causal_lookup.csv)]' value='[causal_lookup.csv].[store]' />
          <map key='[store (store_lookup.csv)]' value='[store_lookup.csv].[store]' />
          <map key='[store]' value='[transactions.csv].[store]' />
          <map key='[store_zip_code]' value='[store_lookup.csv].[store_zip_code]' />
          <map key='[time_of_transaction]' value='[transactions.csv].[time_of_transaction]' />
          <map key='[units]' value='[transactions.csv].[units]' />
          <map key='[upc (causal_lookup.csv)]' value='[causal_lookup.csv].[upc]' />
          <map key='[upc (product_lookup.csv)]' value='[product_lookup.csv].[upc]' />
          <map key='[upc]' value='[transactions.csv].[upc]' />
          <map key='[week (causal_lookup.csv)]' value='[causal_lookup.csv].[week]' />
          <map key='[week]' value='[transactions.csv].[week]' />
          <map key='[zip]' value='[uszips.csv].[zip]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[store_lookup.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[uszips.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[product_lookup.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[causal_lookup.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>upc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[upc]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>upc</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dollar_sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dollar_sales]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>dollar_sales</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[units]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>units</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_of_transaction</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time_of_transaction]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>time_of_transaction</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geography</remote-name>
            <remote-type>20</remote-type>
            <local-name>[geography]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>geography</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[week]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>week</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>household</remote-name>
            <remote-type>20</remote-type>
            <local-name>[household]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>household</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store</remote-name>
            <remote-type>20</remote-type>
            <local-name>[store]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>store</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>basket</remote-name>
            <remote-type>20</remote-type>
            <local-name>[basket]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>basket</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coupon</remote-name>
            <remote-type>20</remote-type>
            <local-name>[coupon]</local-name>
            <parent-name>[transactions.csv]</parent-name>
            <remote-alias>coupon</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store</remote-name>
            <remote-type>20</remote-type>
            <local-name>[store (store_lookup.csv)]</local-name>
            <parent-name>[store_lookup.csv]</parent-name>
            <remote-alias>store</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_zip_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[store_zip_code]</local-name>
            <parent-name>[store_lookup.csv]</parent-name>
            <remote-alias>store_zip_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zip]</local-name>
            <parent-name>[uszips.csv]</parent-name>
            <remote-alias>zip</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[uszips.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_id]</local-name>
            <parent-name>[uszips.csv]</parent-name>
            <remote-alias>state_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_name]</local-name>
            <parent-name>[uszips.csv]</parent-name>
            <remote-alias>state_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[uszips.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[density]</local-name>
            <parent-name>[uszips.csv]</parent-name>
            <remote-alias>density</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>upc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[upc (product_lookup.csv)]</local-name>
            <parent-name>[product_lookup.csv]</parent-name>
            <remote-alias>upc</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_description]</local-name>
            <parent-name>[product_lookup.csv]</parent-name>
            <remote-alias>product_description</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>commodity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[commodity]</local-name>
            <parent-name>[product_lookup.csv]</parent-name>
            <remote-alias>commodity</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand]</local-name>
            <parent-name>[product_lookup.csv]</parent-name>
            <remote-alias>brand</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_size</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_size]</local-name>
            <parent-name>[product_lookup.csv]</parent-name>
            <remote-alias>product_size</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>upc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[upc (causal_lookup.csv)]</local-name>
            <parent-name>[causal_lookup.csv]</parent-name>
            <remote-alias>upc</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store</remote-name>
            <remote-type>20</remote-type>
            <local-name>[store (causal_lookup.csv)]</local-name>
            <parent-name>[causal_lookup.csv]</parent-name>
            <remote-alias>store</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[week (causal_lookup.csv)]</local-name>
            <parent-name>[causal_lookup.csv]</parent-name>
            <remote-alias>week</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feature_desc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[feature_desc]</local-name>
            <parent-name>[causal_lookup.csv]</parent-name>
            <remote-alias>feature_desc</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>display_desc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[display_desc]</local-name>
            <parent-name>[causal_lookup.csv]</parent-name>
            <remote-alias>display_desc</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geography</remote-name>
            <remote-type>20</remote-type>
            <local-name>[geography (causal_lookup.csv)]</local-name>
            <parent-name>[causal_lookup.csv]</parent-name>
            <remote-alias>geography</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions.csv_A50138A9108948FC96BAC02361544419]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='SpendPerCapita' datatype='real' name='[Calculation_1395552949915037696]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([dollar_sales])/MEDIAN([population])' />
      </column>
      <column caption='SalesPerHousehold' datatype='real' name='[Calculation_2643612997008031744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([dollar_sales])/COUNTD([household])' />
      </column>
      <column caption='KrogerBrand' datatype='integer' name='[Calculation_2643612997021954049]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF REGEXP_MATCH([product_description], &quot;PRIVATE&quot;) THEN 1 ELSE 0 END' />
      </column>
      <column datatype='string' name='[Feature Desc (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[feature_desc]' new-bin='true'>
          <bin default-name='false' value='&quot;Featured&quot;'>
            <value>&quot;Back Page Feature&quot;</value>
            <value>&quot;Front Page Feature&quot;</value>
            <value>&quot;Interior Page Feature&quot;</value>
            <value>&quot;Interior Page Line Item&quot;</value>
            <value>&quot;Wrap Back Feature&quot;</value>
            <value>&quot;Wrap Front Feature&quot;</value>
            <value>&quot;Wrap Interior Feature&quot;</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='None' datatype='integer' name='[Population (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[population]' peg='0' size='4170' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='transactions.csv' datatype='table' name='[__tableau_internal_object_id__].[transactions.csv_A50138A9108948FC96BAC02361544419]' role='measure' type='quantitative' />
      <column caption='Basket' datatype='integer' name='[basket]' role='measure' type='quantitative' />
      <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Commodity' datatype='string' name='[commodity]' role='dimension' type='nominal' />
      <column caption='Coupon' datatype='integer' name='[coupon]' role='measure' type='quantitative' />
      <column caption='Day' datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column caption='Density' datatype='real' name='[density]' role='measure' type='quantitative' />
      <column caption='Display Desc' datatype='string' name='[display_desc]' role='dimension' type='nominal' />
      <column caption='Dollar Sales' datatype='real' name='[dollar_sales]' role='measure' type='quantitative' />
      <column caption='Feature Desc' datatype='string' name='[feature_desc]' role='dimension' type='nominal' />
      <column caption='Geography (Causal Lookup.Csv)' datatype='integer' name='[geography (causal_lookup.csv)]' role='measure' type='quantitative' />
      <column caption='Geography' datatype='integer' name='[geography]' role='measure' type='quantitative' />
      <column caption='Household' datatype='integer' name='[household]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Product Description' datatype='string' name='[product_description]' role='dimension' type='nominal' />
      <column caption='Product Size' datatype='string' name='[product_size]' role='dimension' type='nominal' />
      <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Store (Causal Lookup.Csv)' datatype='integer' name='[store (causal_lookup.csv)]' role='measure' type='quantitative' />
      <column caption='Store (Store Lookup.Csv)' datatype='integer' name='[store (store_lookup.csv)]' role='measure' type='quantitative' />
      <column caption='Store' datatype='integer' name='[store]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Store Zip Code' datatype='integer' default-format='*00000' name='[store_zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Time Of Transaction' datatype='integer' name='[time_of_transaction]' role='measure' type='quantitative' />
      <column caption='Units' datatype='integer' name='[units]' role='measure' type='quantitative' />
      <column caption='Upc (Causal Lookup.Csv)' datatype='integer' name='[upc (causal_lookup.csv)]' role='measure' type='quantitative' />
      <column caption='Upc (Product Lookup.Csv)' datatype='integer' name='[upc (product_lookup.csv)]' role='measure' type='quantitative' />
      <column caption='Upc' datatype='integer' name='[upc]' role='measure' type='quantitative' />
      <column caption='Week (Causal Lookup.Csv)' datatype='integer' name='[week (causal_lookup.csv)]' role='dimension' type='quantitative' />
      <column caption='Week' datatype='integer' name='[week]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Zip' datatype='integer' default-format='*00000' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[commodity]' derivation='None' name='[none:commodity:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:commodity:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;pancake mixes&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;syrups&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pasta sauce&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pasta&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Feature Desc (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Back Page Feature&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Featured&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Interior Page Line Item&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wrap Front Feature&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Interior Page Feature&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Wrap Back Feature&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Front Page Feature&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Not on Feature&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Wrap Interior Feature&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cookeville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Farragut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Goodlettsville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hermitage&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lawrenceburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewisburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mcminnville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mount Juliet&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oak Ridge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sevierville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seymour&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shelbyville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sparta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spring Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tullahoma&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='transactions.csv' id='transactions.csv_A50138A9108948FC96BAC02361544419'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='AND'>
                    <expression op='='>
                      <expression op='[transactions.csv].[store]' />
                      <expression op='[causal_lookup.csv].[store]' />
                    </expression>
                    <expression op='='>
                      <expression op='[transactions.csv].[week]' />
                      <expression op='[causal_lookup.csv].[week]' />
                    </expression>
                    <expression op='='>
                      <expression op='[transactions.csv].[upc]' />
                      <expression op='[causal_lookup.csv].[upc]' />
                    </expression>
                  </expression>
                </clause>
                <relation join='left' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[transactions.csv].[upc]' />
                      <expression op='[product_lookup.csv].[upc]' />
                    </expression>
                  </clause>
                  <relation join='left' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[store_lookup.csv].[store_zip_code]' />
                        <expression op='[uszips.csv].[zip]' />
                      </expression>
                    </clause>
                    <relation join='left' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[transactions.csv].[store]' />
                          <expression op='[store_lookup.csv].[store]' />
                        </expression>
                      </clause>
                      <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='transactions.csv' table='[transactions#csv]' type='table'>
                        <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                          <column datatype='integer' name='upc' ordinal='0' />
                          <column datatype='real' name='dollar_sales' ordinal='1' />
                          <column datatype='integer' name='units' ordinal='2' />
                          <column datatype='integer' name='time_of_transaction' ordinal='3' />
                          <column datatype='integer' name='geography' ordinal='4' />
                          <column datatype='integer' name='week' ordinal='5' />
                          <column datatype='integer' name='household' ordinal='6' />
                          <column datatype='integer' name='store' ordinal='7' />
                          <column datatype='integer' name='basket' ordinal='8' />
                          <column datatype='integer' name='day' ordinal='9' />
                          <column datatype='integer' name='coupon' ordinal='10' />
                        </columns>
                      </relation>
                      <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='store_lookup.csv' table='[store_lookup#csv]' type='table'>
                        <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                          <column datatype='integer' name='store' ordinal='0' />
                          <column datatype='integer' name='store_zip_code' ordinal='1' />
                        </columns>
                      </relation>
                    </relation>
                    <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='uszips.csv' table='[uszips#csv]' type='table'>
                      <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                        <column datatype='integer' name='zip' ordinal='0' />
                        <column datatype='string' name='city' ordinal='1' />
                        <column datatype='string' name='state_id' ordinal='2' />
                        <column datatype='string' name='state_name' ordinal='3' />
                        <column datatype='integer' name='population' ordinal='4' />
                        <column datatype='real' name='density' ordinal='5' />
                      </columns>
                    </relation>
                  </relation>
                  <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='product_lookup.csv' table='[product_lookup#csv]' type='table'>
                    <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                      <column datatype='integer' name='upc' ordinal='0' />
                      <column datatype='string' name='product_description' ordinal='1' />
                      <column datatype='string' name='commodity' ordinal='2' />
                      <column datatype='string' name='brand' ordinal='3' />
                      <column datatype='string' name='product_size' ordinal='4' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='textscan.1p01qc21gze0bn1a8fuma1mi413r' name='causal_lookup.csv' table='[causal_lookup#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='upc' ordinal='0' />
                    <column datatype='integer' name='store' ordinal='1' />
                    <column datatype='integer' name='week' ordinal='2' />
                    <column datatype='string' name='feature_desc' ordinal='3' />
                    <column datatype='string' name='display_desc' ordinal='4' />
                    <column datatype='integer' name='geography' ordinal='5' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='CommodityByState'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+' name='federated.1psp1s30gcrerd1bct4nh1mdo54m' />
          </datasources>
          <datasource-dependencies datasource='federated.1psp1s30gcrerd1bct4nh1mdo54m'>
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column caption='Commodity' datatype='string' name='[commodity]' role='dimension' type='nominal' />
            <column caption='Dollar Sales' datatype='real' name='[dollar_sales]' role='measure' type='quantitative' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column-instance column='[commodity]' derivation='None' name='[none:commodity:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_id]' derivation='None' name='[none:state_id:nk]' pivot='key' type='nominal' />
            <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[dollar_sales]' derivation='Sum' name='[sum:dollar_sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:brand:nk]'>
            <groupfilter expression='CONTAINS(LOWER([brand]), LOWER(&apos;PRIVATE&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='PRIVATE' user:ui-pattern_type='contains'>
              <groupfilter function='level-members' level='[none:brand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]'>
            <groupfilter from='&quot;AL&quot;' function='range' level='[none:state_id:nk]' to='&quot;TN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]</column>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:brand:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' />
              <text column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]</rows>
        <cols>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]</cols>
      </table>
      <simple-id uuid='{9D4CDEF8-DA4C-417A-A6C1-E2B3CD739779}' />
    </worksheet>
    <worksheet name='CommodityDistribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+' name='federated.1psp1s30gcrerd1bct4nh1mdo54m' />
          </datasources>
          <datasource-dependencies datasource='federated.1psp1s30gcrerd1bct4nh1mdo54m'>
            <column-instance column='[units]' derivation='Count' name='[cnt:units:qk]' pivot='key' type='quantitative' />
            <column caption='Commodity' datatype='string' name='[commodity]' role='dimension' type='nominal' />
            <column-instance column='[commodity]' derivation='None' name='[none:commodity:nk]' pivot='key' type='nominal' />
            <column-instance column='[units]' derivation='Sum' name='[sum:units:qk]' pivot='key' type='quantitative' />
            <column caption='Units' datatype='integer' name='[units]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:units:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]' value='150' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[cnt:units:qk]' palette='red_green_gold_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[cnt:units:qk]' />
              <text column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[cnt:units:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]</rows>
        <cols>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[cnt:units:qk]</cols>
      </table>
      <simple-id uuid='{D7B2F5CC-5A06-44E8-A042-D9F4E298A679}' />
    </worksheet>
    <worksheet name='DailyForecasts'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>The highest daily sales in the first 100 days of the data occured on day 78 in GA with the sales of 8,519.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+' name='federated.1psp1s30gcrerd1bct4nh1mdo54m' />
          </datasources>
          <datasource-dependencies datasource='federated.1psp1s30gcrerd1bct4nh1mdo54m'>
            <column caption='Day' datatype='integer' name='[day]' role='dimension' type='quantitative' />
            <column caption='Dollar Sales' datatype='real' name='[dollar_sales]' role='measure' type='quantitative' />
            <column-instance column='[dollar_sales]' derivation='Sum' forecast-column-base='[sum:dollar_sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:dollar_sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[day]' derivation='None' name='[none:day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state_id]' derivation='None' name='[none:state_id:nk]' pivot='key' type='nominal' />
            <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[dollar_sales]' derivation='Sum' name='[sum:dollar_sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:day:qk]' included-values='in-range'>
            <min>1</min>
            <max>100</max>
          </filter>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state_id:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:state_id:nk]' member='&quot;TN&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:day:qk]</column>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]' />
              <text column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[fVal:sum:dollar_sales:qk]</rows>
        <cols>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:day:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{F524A1A2-D9C9-4788-A625-564553CFA2F0}' />
    </worksheet>
    <worksheet name='FeatureEffectiveness'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Not all of the featured products have higher sales on average. The featured averages tend to be higher than those that were not featured. A few of them have boxes above their counterpart&apos;s boxes. This leads to the conclusion that the ad campaigns were somwhat effective. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+' name='federated.1psp1s30gcrerd1bct4nh1mdo54m' />
          </datasources>
          <datasource-dependencies datasource='federated.1psp1s30gcrerd1bct4nh1mdo54m'>
            <column datatype='string' name='[Feature Desc (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[feature_desc]' new-bin='true'>
                <bin default-name='false' value='&quot;Featured&quot;'>
                  <value>&quot;Back Page Feature&quot;</value>
                  <value>&quot;Front Page Feature&quot;</value>
                  <value>&quot;Interior Page Feature&quot;</value>
                  <value>&quot;Interior Page Line Item&quot;</value>
                  <value>&quot;Wrap Back Feature&quot;</value>
                  <value>&quot;Wrap Front Feature&quot;</value>
                  <value>&quot;Wrap Interior Feature&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Dollar Sales' datatype='real' name='[dollar_sales]' role='measure' type='quantitative' />
            <column caption='Feature Desc' datatype='string' name='[feature_desc]' role='dimension' type='nominal' />
            <column-instance column='[product_description]' derivation='None' name='[none:product_description:nk]' pivot='key' type='nominal' />
            <column-instance column='[week]' derivation='None' name='[none:week:qk]' pivot='key' type='quantitative' />
            <column caption='Product Description' datatype='string' name='[product_description]' role='dimension' type='nominal' />
            <column-instance column='[dollar_sales]' derivation='Sum' name='[sum:dollar_sales:qk]' pivot='key' type='quantitative' />
            <column caption='Week' datatype='integer' name='[week]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Feature Desc (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Feature Desc (group)]' />
              <groupfilter function='member' level='[Feature Desc (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Feature Desc (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Featured&quot;</bucket>
              <bucket>&quot;Not on Feature&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([product_description])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk]</column>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Feature Desc (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='wrap' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk]' value='on' />
            <format attr='width' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Feature Desc (group)]' value='50' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='total' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk]' value='on' />
            <format attr='wrap' data-class='subtotal' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk]' value='on' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Feature Desc (group)]' value='-90' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='stroke-color' id='refline3' value='#e15759' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='glass' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Feature Desc (group)]' />
              <lod column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:week:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' z-order='1' />
            <reference-line axis-column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-pane' value-column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' z-order='2' />
            <reference-line axis-column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' probability='95' scope='per-pane' value-column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' z-order='3' />
            <reference-line axis-column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='none' probability='95' scope='per-pane' value-column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]</rows>
        <cols>([federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk] / [federated.1psp1s30gcrerd1bct4nh1mdo54m].[Feature Desc (group)])</cols>
      </table>
      <simple-id uuid='{01AFD392-A866-4A04-97C9-616F1A4C7C93}' />
    </worksheet>
    <worksheet name='KnoxvillePasta'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>There seems to be no association between the zip code&apos;s average population and total dollars spent on pasta.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+' name='federated.1psp1s30gcrerd1bct4nh1mdo54m' />
          </datasources>
          <datasource-dependencies datasource='federated.1psp1s30gcrerd1bct4nh1mdo54m'>
            <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Commodity' datatype='string' name='[commodity]' role='dimension' type='nominal' />
            <column caption='Dollar Sales' datatype='real' name='[dollar_sales]' role='measure' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[commodity]' derivation='None' name='[none:commodity:nk]' pivot='key' type='nominal' />
            <column-instance column='[store_zip_code]' derivation='None' name='[none:store_zip_code:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Store Zip Code' datatype='integer' default-format='*00000' name='[store_zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[dollar_sales]' derivation='Sum' name='[sum:dollar_sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]'>
            <groupfilter function='member' level='[none:city:nk]' member='&quot;Knoxville&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]'>
            <groupfilter function='member' level='[none:commodity:nk]' member='&quot;pasta&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:store_zip_code:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]</column>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[avg:population:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]</rows>
        <cols>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:store_zip_code:ok]</cols>
      </table>
      <simple-id uuid='{44DF1885-D152-4C52-B02D-E0CD150902F2}' />
    </worksheet>
    <worksheet name='KnoxvillePastaPerHousehold'>
      <layout-options>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+' name='federated.1psp1s30gcrerd1bct4nh1mdo54m' />
          </datasources>
          <datasource-dependencies datasource='federated.1psp1s30gcrerd1bct4nh1mdo54m'>
            <column caption='SalesPerHousehold' datatype='real' name='[Calculation_2643612997008031744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dollar_sales])/COUNTD([household])' />
            </column>
            <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Commodity' datatype='string' name='[commodity]' role='dimension' type='nominal' />
            <column caption='Dollar Sales' datatype='real' name='[dollar_sales]' role='measure' type='quantitative' />
            <column caption='Household' datatype='integer' name='[household]' role='measure' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[commodity]' derivation='None' name='[none:commodity:nk]' pivot='key' type='nominal' />
            <column-instance column='[store_zip_code]' derivation='None' name='[none:store_zip_code:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Store Zip Code' datatype='integer' default-format='*00000' name='[store_zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Calculation_2643612997008031744]' derivation='User' name='[usr:Calculation_2643612997008031744:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]'>
            <groupfilter function='member' level='[none:city:nk]' member='&quot;Knoxville&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]'>
            <groupfilter function='member' level='[none:commodity:nk]' member='&quot;pasta&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:store_zip_code:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[usr:Calculation_2643612997008031744:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]</column>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[avg:population:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[usr:Calculation_2643612997008031744:qk]</rows>
        <cols>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:store_zip_code:ok]</cols>
      </table>
      <simple-id uuid='{3AC08778-26EE-4883-A12D-964DE648F804}' />
    </worksheet>
    <worksheet name='PercentKrogerBrand'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+' name='federated.1psp1s30gcrerd1bct4nh1mdo54m' />
          </datasources>
          <datasource-dependencies datasource='federated.1psp1s30gcrerd1bct4nh1mdo54m'>
            <column caption='KrogerBrand' datatype='integer' name='[Calculation_2643612997021954049]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF REGEXP_MATCH([product_description], &quot;PRIVATE&quot;) THEN 1 ELSE 0 END' />
            </column>
            <column-instance column='[Calculation_2643612997021954049]' derivation='Avg' name='[avg:Calculation_2643612997021954049:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[population]' derivation='None' name='[none:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state_id]' derivation='None' name='[none:state_id:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Product Description' datatype='string' name='[product_description]' role='dimension' type='nominal' />
            <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:population:qk]' included-values='in-range'>
            <min>20000</min>
          </filter>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]'>
            <groupfilter function='member' level='[none:state_id:nk]' member='&quot;TN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[avg:Calculation_2643612997021954049:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:population:qk]</column>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]' value='26' />
            <format attr='text-format' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[avg:Calculation_2643612997021954049:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]' />
              <text column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[avg:Calculation_2643612997021954049:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[avg:Calculation_2643612997021954049:qk]</rows>
        <cols>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]</cols>
      </table>
      <simple-id uuid='{9B1676F6-B8C7-4A69-B5AE-C105C60CC9D4}' />
    </worksheet>
    <worksheet name='ProductPenetration'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>The product with the highest penetration that is NOT  a part of Kroger&apos;s Private Label brand is Ragu Traditional Plain which was purchased by 39,966 different households.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+' name='federated.1psp1s30gcrerd1bct4nh1mdo54m' />
          </datasources>
          <datasource-dependencies datasource='federated.1psp1s30gcrerd1bct4nh1mdo54m'>
            <column caption='Commodity' datatype='string' name='[commodity]' role='dimension' type='nominal' />
            <column-instance column='[household]' derivation='CountD' name='[ctd:household:qk]' pivot='key' type='quantitative' />
            <column caption='Household' datatype='integer' name='[household]' role='measure' type='quantitative' />
            <column-instance column='[commodity]' derivation='None' name='[none:commodity:nk]' pivot='key' type='nominal' />
            <column-instance column='[product_description]' derivation='None' name='[none:product_description:nk]' pivot='key' type='nominal' />
            <column caption='Product Description' datatype='string' name='[product_description]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([household])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[ctd:household:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='auto' />
            <format attr='vertical-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]' />
              <text column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[ctd:household:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[ctd:household:qk]</rows>
        <cols>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk]</cols>
      </table>
      <simple-id uuid='{8AED123E-6A96-47B8-ADB7-DB02CC85FE39}' />
    </worksheet>
    <worksheet name='TennesseeSpentPerCapita'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>The zip code with the highest sales per capita is 37211.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+' name='federated.1psp1s30gcrerd1bct4nh1mdo54m' />
          </datasources>
          <datasource-dependencies datasource='federated.1psp1s30gcrerd1bct4nh1mdo54m'>
            <column caption='SpendPerCapita' datatype='real' name='[Calculation_1395552949915037696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dollar_sales])/MEDIAN([population])' />
            </column>
            <column caption='Dollar Sales' datatype='real' name='[dollar_sales]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='None' name='[none:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state_id]' derivation='None' name='[none:state_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[zip]' derivation='None' name='[none:zip:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1395552949915037696]' derivation='User' name='[usr:Calculation_1395552949915037696:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Zip' datatype='integer' default-format='*00000' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:population:qk]' included-values='in-range'>
            <min>50000</min>
            <max>97939</max>
          </filter>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]'>
            <groupfilter function='member' level='[none:state_id:nk]' member='&quot;TN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:zip:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[usr:Calculation_1395552949915037696:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]</column>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:population:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[usr:Calculation_1395552949915037696:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[usr:Calculation_1395552949915037696:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[usr:Calculation_1395552949915037696:qk]</rows>
        <cols>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:zip:ok]</cols>
      </table>
      <simple-id uuid='{7C862325-1EB2-4C99-BAC3-1656847CCEAF}' />
    </worksheet>
    <worksheet name='TennesseeTotals'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>The zip code with the most dollar sales is 37211.
</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+' name='federated.1psp1s30gcrerd1bct4nh1mdo54m' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1psp1s30gcrerd1bct4nh1mdo54m'>
            <column caption='Dollar Sales' datatype='real' name='[dollar_sales]' role='measure' type='quantitative' />
            <column-instance column='[state_id]' derivation='None' name='[none:state_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[zip]' derivation='None' name='[none:zip:ok]' pivot='key' type='ordinal' />
            <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[dollar_sales]' derivation='Sum' name='[sum:dollar_sales:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Zip' datatype='integer' default-format='*00000' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]'>
            <groupfilter function='member' level='[none:state_id:nk]' member='&quot;TN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Longitude (generated)]' field-type='quantitative' max='-9248277.4665722288' min='-9780720.8174262717' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Latitude (generated)]' field-type='quantitative' max='4431182.1804988272' min='4139925.1042853212' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='35000.0' field='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' palette='red_green_gold_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' />
              <lod column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:zip:ok]' />
              <geometry column='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Latitude (generated)]</rows>
        <cols>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6951705D-C64C-462D-838F-91BBC5981D12}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='TennesseeTotals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_name:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:zip:ok]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BA5C9D8-49A2-44D9-B651-33E6129CC87F}' />
    </window>
    <window class='worksheet' name='TennesseeSpentPerCapita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:population:qk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:zip:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5C507FF-0460-4BD2-85BC-D0E6FA795B0F}' />
    </window>
    <window class='worksheet' name='CommodityDistribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[cnt:units:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[cnt:units:qk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C599C24-BFE6-43B3-B383-FC7461664308}' />
    </window>
    <window class='worksheet' name='DailyForecasts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:day:ok]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:day:qk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15B394F3-8D0E-4012-8AA0-9E6E9CAA45A5}' />
    </window>
    <window class='worksheet' name='ProductPenetration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EBC57D3D-4006-4437-AD38-4D98DABDEBA0}' />
    </window>
    <window class='worksheet' name='KnoxvillePasta'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[avg:population:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[avg:population:qk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:store_zip_code:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DE9FD3B-C0B6-4288-ABB1-5E0E0DA5850F}' />
    </window>
    <window class='worksheet' name='KnoxvillePastaPerHousehold'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[avg:population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[avg:population:qk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:store_zip_code:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9AC564A2-91DA-4EA2-853C-9656CD598EFF}' />
    </window>
    <window class='worksheet' name='FeatureEffectiveness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Feature Desc (group)]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Feature Desc (group)]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:feature_desc:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:product_description:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:week:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCB9FEEC-A3D6-4FAB-B47B-A28DA80327FC}' />
    </window>
    <window class='worksheet' name='CommodityByState'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[sum:dollar_sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:brand:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:commodity:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F329527-7021-478D-9F1E-B0A6C8E1706F}' />
    </window>
    <window class='worksheet' maximized='true' name='PercentKrogerBrand'>
      <cards>
        <edge name='left'>
          <strip size='108'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[Knoxville]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:city:nk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:population:qk]</field>
            <field>[federated.1psp1s30gcrerd1bct4nh1mdo54m].[none:state_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3EF87D6-4826-406D-8E3E-8012A8DAD942}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='128' name='CommodityByState' width='192'>
      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
      s1+qTbwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CommodityDistribution' width='192'>
      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
      BxBa+1+FE/80kU8TlgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DailyForecasts' width='192'>
      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
      NwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='FeatureEffectiveness' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='KnoxvillePasta' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='KnoxvillePastaPerHousehold' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='PercentKrogerBrand' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ProductPenetration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TennesseeSpentPerCapita' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TennesseeTotals' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
